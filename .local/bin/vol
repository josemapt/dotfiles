#!/bin/sh

# This program changes volume
# Example: vol up (raises volume 5%)

# Arbitrary but unique message id
msgId="991049"

function getProgressString {
    ITEMS="$1" # The total number of items(the width of the bar)
    FILLED_ITEM="$2" # The look of a filled item 
    NOT_FILLED_ITEM="$3" # The look of a not filled item
    STATUS="$4" # The current progress status in percent

    # calculate how many items need to be filled and not filled
    FILLED_ITEMS=$(echo "((${ITEMS} * ${STATUS})/100 + 0.5) / 1" | bc)
    NOT_FILLED_ITEMS=$(echo "$ITEMS - $FILLED_ITEMS" | bc)

    # Assemble the bar string
    msg=$(printf "%${FILLED_ITEMS}s" | sed "s| |${FILLED_ITEM}|g")
    msg=${msg}$(printf "%${NOT_FILLED_ITEMS}s" | sed "s| |${NOT_FILLED_ITEM}|g")
    echo "$msg"
}

# Change the volume using alsa
case "$@" in
    *u*)      amixer set Master 5%+   > /dev/null ;;
    *d*)      amixer set Master 5%-   > /dev/null ;;
    *t*)      amixer set Master toggle   > /dev/null ;;
esac

# Query amixer for the current volume and whether or not the speaker is muted
volume=`amixer -M get Master | tail -1 | awk '{print $4}' | sed 's/[^0-9]*//g'`
mute=`amixer -M get Master | tail -1 | awk '{print $6}' | sed 's/[^a-z]*//g'`
if [[ $volume == 0 || "$mute" == "off" ]]; then
    # Show the sound muted notification
    dunstify -a "changeVolume" -u low -r "$msgId" "Volume muted" 
else
    # Show the volume notification
    dunstify -a "changeVolume" -u low -r "$msgId" \
    "Volume: ${volume}%" "$(getProgressString 12 "ï‘…" "" $volume)"
fi

# Play the volume changed sound
canberra-gtk-play -i audio-volume-change -d "changeVolume"
